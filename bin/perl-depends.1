.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL-DEPENDS 1"
.TH PERL-DEPENDS 1 "2010-03-19" "perl v5.10.1" "cvs status - formatter"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl\-depends \- Roughly find out module depends from Perl file(s)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  perl\-depends [options] FILE [FILE ...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Find out roughly the modules the program uses. This is based on the
idea, that Perl evaluates the \*(L"use\*(R" commands at compile time and
stores the loaded module information into the \f(CW%INC\fR variable. By
examining the loaded modules and comparing them against the standard
Perl modules, the external module dependencies can be roughly estimated.
.PP
The depends information can be used to determine what external modules
have to be installed before program can be used.
.PP
The file need to be instrumented for the dependency checking. The resulting
\&\*(L"binary\*(R" is then stored in a temporary file which the user runs.
.PP
To prgram does not run the instrumented files because it cannot know
what possible options need to be passed to the program to trigger \*(L"no
behavior\*(R". That is, something that doesn't actually run the program.
Such options would include \-\-version, \-\-dry\-run,
\&\-\-generate\-syntax\-error\-now, invalid files etc. The user can know
better the details of the inspected file.
.PP
An example of output: the external module depends here is 'Regexp::Common'
and the rest of them can be ignored.
.PP
.Vb 3
\&    Regexp::Common                 Regexp/Common.pm
\&    Regexp::Common::CC             Regexp/Common/CC.pm
\&    ...
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-e, \-\-extension=EXT\fR" 4
.IX Item "-e, --extension=EXT"
Use extension \s-1EXT\s0 for instrumented files. The defaul is \f(CW\*(C`.tmp\*(C'\fR.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print text help
.IP "\fB\-\-help\-exclude\fR" 4
.IX Item "--help-exclude"
Print default exclude path value when \fB\-\-exclude\-vcs\fR is used.
.IP "\fB\-\-help\-html\fR" 4
.IX Item "--help-html"
Print help in \s-1HTML\s0 format.
.IP "\fB\-\-help\-man\fR" 4
.IX Item "--help-man"
Print help in manual page \f(CWman(1)\fR format.
.IP "\fB\-v, \-\-verbose \s-1LEVEL\s0\fR" 4
.IX Item "-v, --verbose LEVEL"
Print informational messages. Increase numeric \s-1LEVEL\s0 for more
verbosity.
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Print contact and version information.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Instrument a file, run it to see results and delete instrumentation:
.PP
.Vb 3
\&    perl\-depends file.pl
\&    perl file.pl.tmp \-\-version
\&    rm *.tmp
.Ve
.SH "TROUBLESHOOTING"
.IX Header "TROUBLESHOOTING"
None.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
None.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
None.
.SH "FILES"
.IX Header "FILES"
None.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIcloc\fR\|(1)
.SH "COREQUISITES"
.IX Header "COREQUISITES"
Uses standard Perl modules.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
Homepage is at http://freshmeat.net/projects/perl\-depends
.SH "AUTHORS"
.IX Header "AUTHORS"
Copyright (C) 2009\-2010 Jari Aalto.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute and/or modify
program under the terms of \s-1GNU\s0 General Public license either version 2
of the License, or (at your option) any later version.
